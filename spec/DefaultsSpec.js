// Generated by CoffeeScript 1.3.3

describe("Charbroil", function() {
  describe("simple defaults", function() {
    beforeEach(function() {
      loadFixtures('default-list.html');
      this.list = $('.categories').charbroil();
      return this.links = $('.categories a');
    });
    it("should add shortcut classes to links with matching hot key", function() {
      var letter, link, _i, _len, _ref, _results;
      _ref = this.links;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        link = _ref[_i];
        letter = $(link).find('span').html().charAt(0).toLowerCase();
        _results.push(expect(link).toHaveClass('charbroil-ctrl-' + letter));
      }
      return _results;
    });
    it("should have a highlighted letter", function() {
      var link, _i, _len, _ref, _results;
      _ref = this.links;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        link = _ref[_i];
        _results.push(expect($(link).find('span.charbroil-hot').length).toBeGreaterThan(0));
      }
      return _results;
    });
    return it("should contain the full word in the link", function() {
      var link, _i, _len, _ref, _results;
      _ref = this.links;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        link = _ref[_i];
        $(link).find('span').remove();
        _results.push(expect($(link).html().length).toBeGreaterThan(0));
      }
      return _results;
    });
  });
  describe("with multiple modifiers", function() {
    beforeEach(function() {
      loadFixtures('default-list.html');
      this.list = $('.categories').charbroil({
        modifier: ['command', 'shift']
      });
      return this.links = $('.categories a');
    });
    return it("should add shortcut class for command and shift with matching hot key", function() {
      var letter, link, _i, _len, _ref, _results;
      this.links = $('.categories a');
      _ref = this.links;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        link = _ref[_i];
        letter = $(link).find('span').html().charAt(0);
        expect($(link)).toHaveClass('charbroil-shift-' + letter);
        _results.push(expect($(link)).toHaveClass('charbroil-command-' + letter));
      }
      return _results;
    });
  });
  describe("supports charbroil-key data attribute", function() {
    beforeEach(function() {
      loadFixtures('data-attribute-list.html');
      this.list = $('.categories').charbroil();
      return this.links = $('.categories a');
    });
    return it("should make shortcut key based on the charbroil-key letter", function() {
      var letter, link, _i, _len, _ref, _results;
      _ref = this.links;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        link = _ref[_i];
        letter = $(link).attr('charbroil-key');
        if (letter) {
          _results.push(expect($(link)).toHaveClass('charbroil-ctrl-' + letter));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    });
  });
  return describe("with exclude option", function() {
    beforeEach(function() {
      loadFixtures('default-list.html');
      this.list = $('.categories').charbroil({
        modifier: 'shift',
        exclude: ['a', 'b']
      });
      return this.links = $('.categories a');
    });
    return it("should not contain a hot key for the letters in the exclude list", function() {
      var link, _i, _len, _ref;
      _ref = this.links;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        link = _ref[_i];
        expect(link).not.toHaveClass('charbroil-shift-a');
        expect(link).not.toHaveClass('charbroil-shift-b');
      }
      return expect($('.charbroil-shift-l')).toBe('a');
    });
  });
});
