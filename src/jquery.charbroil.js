// Generated by CoffeeScript 1.3.3

(function($, window) {
  var Charbroil, defaults, document, pluginName;
  pluginName = 'charbroil';
  document = window.document;
  defaults = {
    hot_key_css_class: 'charbroil-hot',
    modifier: 'ctrl'
  };
  Charbroil = (function() {

    function Charbroil(element, options) {
      this.element = element;
      this.options = $.extend({}, defaults, options);
      this._defaults = defaults;
      this._name = pluginName;
      this._shortcuts = [];
      this.init();
    }

    Charbroil.prototype.init = function() {
      var after_text, before_text, letter, letter_index, link, replace_with, shortcut, shortcut_class_name, text, _i, _len, _ref;
      this.load_links();
      _ref = this.links;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        link = _ref[_i];
        text = $(link).html();
        letter_index = this.find_available_letter_index(text);
        if (letter_index < 0) {
          continue;
        }
        letter = text.charAt(letter_index).toLowerCase();
        this._shortcuts.push(letter);
        shortcut = this.options.modifier + '+' + letter;
        shortcut_class_name = 'charbroil-' + shortcut.replace('+', '-');
        before_text = text.substring(0, letter_index);
        after_text = text.substring(letter_index + 1);
        replace_with = $("<span>" + letter + "</span>").addClass(this.options.hot_key_css_class);
        $(link).addClass(shortcut_class_name);
        $(link).html(replace_with);
        $('.' + shortcut_class_name + ' span').before(before_text).after(after_text);
        key(shortcut, function(e, h) {
          shortcut_class_name = 'charbroil-' + h.shortcut.replace('+', '-');
          return window.location = $('.' + shortcut_class_name).attr('href');
        });
      }
      return this;
    };

    Charbroil.prototype.load_links = function() {
      return this.links = $(this.element).find('a');
    };

    Charbroil.prototype.find_available_letter_index = function(words) {
      var index, letter, _i, _ref;
      for (index = _i = 0, _ref = words.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; index = 0 <= _ref ? ++_i : --_i) {
        letter = words[index].toLowerCase();
        if (!/[a-z]/.test(letter)) {
          continue;
        }
        if ($.inArray(letter, this._shortcuts) === -1) {
          return index;
        }
      }
      return -1;
    };

    Charbroil.prototype.last_char = function(s) {
      return s.charAt(s.length(-1));
    };

    return Charbroil;

  })();
  return $.fn[pluginName] = function(options) {
    return this.each(function() {
      if (!$.data(this, "plugin_" + pluginName)) {
        return $.data(this, "plugin_" + pluginName, new Charbroil(this, options));
      }
    });
  };
})(jQuery, window);
